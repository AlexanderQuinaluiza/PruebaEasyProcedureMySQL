<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>